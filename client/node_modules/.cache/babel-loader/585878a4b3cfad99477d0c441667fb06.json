{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Test\\\\Documents\\\\GitHub\\\\contacts\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Test\\\\Documents\\\\GitHub\\\\contacts\\\\client\\\\src\\\\context\\\\contact\\\\ContactState.js\";\nimport React, { useReducer } from 'react';\nimport uuid from 'uuid';\nimport ContactContext from './contactContext';\nimport ContactReducer from './contactReducer';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, SET_ALERT, REMOVE_ALERT } from '../types';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [{\n      name: 'Jill Johnson',\n      id: '1000',\n      email: 'jill@gmail.com',\n      phone: '111-111-1111',\n      type: 'personal'\n    }, {\n      name: 'john Johnson',\n      id: '1000',\n      email: 'john@gmail.com',\n      phone: '111-111-1111',\n      type: 'personal'\n    }, {\n      name: 'jake Johnson',\n      email: 'jake@gmail.com',\n      phone: '111-111-1111',\n      type: 'professional'\n    }]\n  };\n\n  const _useReducer = useReducer(ContactReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; //Add Contact\n\n\n  const addContact = contact => {\n    contact.id = uuid.v4();\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n    console.log(contact.id);\n  }; //Delete Contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; //Set Current Contact\n  //Clear Current Contact\n  //Update Contact\n  //Filter Contacts\n  //ClearFilter\n\n\n  return React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      addContact,\n      deleteContact\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["C:\\Users\\Test\\Documents\\GitHub\\contacts\\client\\src\\context\\contact\\ContactState.js"],"names":["React","useReducer","uuid","ContactContext","ContactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","SET_ALERT","REMOVE_ALERT","ContactState","props","initialState","contacts","name","id","email","phone","type","state","dispatch","addContact","contact","v4","payload","console","log","deleteContact","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SACEC,WADF,EAEEC,cAFF,EAGEC,WAHF,EAIEC,aAJF,EAKEC,cALF,EAMEC,eANF,EAOEC,YAPF,EAQEC,SARF,EASEC,YATF,QAUO,UAVP;;AAYA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,IAAI,EAAE,cADR;AAEEC,MAAAA,EAAE,EAAE,MAFN;AAGEC,MAAAA,KAAK,EAAE,gBAHT;AAIEC,MAAAA,KAAK,EAAE,cAJT;AAKEC,MAAAA,IAAI,EAAE;AALR,KADQ,EAQR;AACEJ,MAAAA,IAAI,EAAE,cADR;AAEEC,MAAAA,EAAE,EAAE,MAFN;AAGEC,MAAAA,KAAK,EAAE,gBAHT;AAIEC,MAAAA,KAAK,EAAE,cAJT;AAKEC,MAAAA,IAAI,EAAE;AALR,KARQ,EAeR;AACEJ,MAAAA,IAAI,EAAE,cADR;AAEEE,MAAAA,KAAK,EAAE,gBAFT;AAGEC,MAAAA,KAAK,EAAE,cAHT;AAIEC,MAAAA,IAAI,EAAE;AAJR,KAfQ;AADS,GAArB;;AAD4B,sBAyBFrB,UAAU,CAACG,cAAD,EAAiBY,YAAjB,CAzBR;AAAA;AAAA,QAyBrBO,KAzBqB;AAAA,QAyBdC,QAzBc,oBA2B5B;;;AACA,QAAMC,UAAU,GAAGC,OAAO,IAAI;AAC5BA,IAAAA,OAAO,CAACP,EAAR,GAAajB,IAAI,CAACyB,EAAL,EAAb;AACAH,IAAAA,QAAQ,CAAC;AAAEF,MAAAA,IAAI,EAAEjB,WAAR;AAAqBuB,MAAAA,OAAO,EAAEF;AAA9B,KAAD,CAAR;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAO,CAACP,EAApB;AACD,GAJD,CA5B4B,CAiC5B;;;AACA,QAAMY,aAAa,GAAGZ,EAAE,IAAI;AAC1BK,IAAAA,QAAQ,CAAC;AAAEF,MAAAA,IAAI,EAAEhB,cAAR;AAAwBsB,MAAAA,OAAO,EAAET;AAAjC,KAAD,CAAR;AACD,GAFD,CAlC4B,CAqC5B;AAEA;AAEA;AAEA;AAEA;;;AAEA,SACE,oBAAC,cAAD,CAAgB,QAAhB;AACE,IAAA,KAAK,EAAE;AACLF,MAAAA,QAAQ,EAAEM,KAAK,CAACN,QADX;AAELQ,MAAAA,UAFK;AAGLM,MAAAA;AAHK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGhB,KAAK,CAACiB,QAPT,CADF;AAWD,CA1DD;;AA4DA,eAAelB,YAAf","sourcesContent":["import React, { useReducer } from 'react';\r\nimport uuid from 'uuid';\r\nimport ContactContext from './contactContext';\r\nimport ContactReducer from './contactReducer';\r\nimport {\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_CONTACT,\r\n  FILTER_CONTACTS,\r\n  CLEAR_FILTER,\r\n  SET_ALERT,\r\n  REMOVE_ALERT\r\n} from '../types';\r\n\r\nconst ContactState = props => {\r\n  const initialState = {\r\n    contacts: [\r\n      {\r\n        name: 'Jill Johnson',\r\n        id: '1000',\r\n        email: 'jill@gmail.com',\r\n        phone: '111-111-1111',\r\n        type: 'personal'\r\n      },\r\n      {\r\n        name: 'john Johnson',\r\n        id: '1000',\r\n        email: 'john@gmail.com',\r\n        phone: '111-111-1111',\r\n        type: 'personal'\r\n      },\r\n      {\r\n        name: 'jake Johnson',\r\n        email: 'jake@gmail.com',\r\n        phone: '111-111-1111',\r\n        type: 'professional'\r\n      }\r\n    ]\r\n  };\r\n  const [state, dispatch] = useReducer(ContactReducer, initialState);\r\n\r\n  //Add Contact\r\n  const addContact = contact => {\r\n    contact.id = uuid.v4();\r\n    dispatch({ type: ADD_CONTACT, payload: contact });\r\n    console.log(contact.id);\r\n  };\r\n  //Delete Contact\r\n  const deleteContact = id => {\r\n    dispatch({ type: DELETE_CONTACT, payload: id });\r\n  };\r\n  //Set Current Contact\r\n\r\n  //Clear Current Contact\r\n\r\n  //Update Contact\r\n\r\n  //Filter Contacts\r\n\r\n  //ClearFilter\r\n\r\n  return (\r\n    <ContactContext.Provider\r\n      value={{\r\n        contacts: state.contacts,\r\n        addContact,\r\n        deleteContact\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ContactContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ContactState;\r\n"]},"metadata":{},"sourceType":"module"}