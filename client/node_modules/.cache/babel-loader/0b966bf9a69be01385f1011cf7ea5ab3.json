{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Test\\\\Documents\\\\GitHub\\\\contacts\\\\client\\\\src\\\\components\\\\contacts\\\\Contacts.js\";\nimport React, { Fragment, useContext } from 'react';\nimport ContactContext from '../../context/contact/contactContext';\nimport ContactItem from './ContactItem';\n\nconst Contacts = () => {\n  const contactContext = useContext(ContactContext);\n\n  if (contacts.length === 0) {\n    return React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, \"Please add a contact\");\n  }\n\n  const contacts = contactContext.contacts,\n        filtered = contactContext.filtered;\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, filtered !== null ? filtered.map(contact => React.createElement(ContactItem, {\n    contact: contact,\n    key: contact.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  })) : contacts.map(contact => React.createElement(ContactItem, {\n    contact: contact,\n    key: contact.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  })));\n};\n\nexport default Contacts;","map":{"version":3,"sources":["C:\\Users\\Test\\Documents\\GitHub\\contacts\\client\\src\\components\\contacts\\Contacts.js"],"names":["React","Fragment","useContext","ContactContext","ContactItem","Contacts","contactContext","contacts","length","filtered","map","contact","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AACA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAMC,cAAc,GAAGJ,UAAU,CAACC,cAAD,CAAjC;;AAEA,MAAII,QAAQ,CAACC,MAAT,KAAoB,CAAxB,EAA2B;AACzB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAP;AACD;;AALoB,QAObD,QAPa,GAOUD,cAPV,CAObC,QAPa;AAAA,QAOHE,QAPG,GAOUH,cAPV,CAOHG,QAPG;AAQrB,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,QAAQ,KAAK,IAAb,GACGA,QAAQ,CAACC,GAAT,CAAaC,OAAO,IAAK,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEA,OAAtB;AAA+B,IAAA,GAAG,EAAEA,OAAO,CAACC,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAzB,CADH,GAGGL,QAAQ,CAACG,GAAT,CAAaC,OAAO,IACpB,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEA,OAAtB;AAA+B,IAAA,GAAG,EAAEA,OAAO,CAACC,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAJN,CADF;AAWD,CAnBD;;AAqBA,eAAeP,QAAf","sourcesContent":["import React, { Fragment, useContext } from 'react';\r\nimport ContactContext from '../../context/contact/contactContext';\r\nimport ContactItem from './ContactItem'\r\nconst Contacts = () => {\r\n  const contactContext = useContext(ContactContext);\r\n\r\n  if (contacts.length === 0) {\r\n    return <h4>Please add a contact</h4>\r\n  }\r\n\r\n  const { contacts, filtered } = contactContext;\r\n  return (\r\n    <Fragment>\r\n      {filtered !== null\r\n        ? filtered.map(contact => (<ContactItem contact={contact} key={contact.id} />))\r\n        : \r\n          contacts.map(contact => (\r\n          <ContactItem contact={contact} key={contact.id}/>\r\n      ) )}\r\n    \r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n"]},"metadata":{},"sourceType":"module"}