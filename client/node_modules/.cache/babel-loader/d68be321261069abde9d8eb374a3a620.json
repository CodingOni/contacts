{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Test\\\\Documents\\\\GitHub\\\\contacts\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Test\\\\Documents\\\\GitHub\\\\contacts\\\\client\\\\src\\\\context\\\\auth\\\\AuthState.js\";\nimport axios from 'axios';\nimport React, { useReducer } from 'react';\nimport setAuthToken from '../../utils/setAuthToken';\nimport { REGISTER_FAIL, REGISTER_SUCCESS, CLEAR_ERRORS, USER_LOADED, AUTH_ERROR } from '../types';\nimport AuthContext from './authContext';\nimport authReducer from './authReducer';\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    user: null,\n    isAuthenticated: null,\n    loading: true,\n    error: null\n  };\n\n  const _useReducer = useReducer(authReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; //Load User\n\n\n  const loadUser = async () => {\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n\n    try {\n      const res = await axios.get('/api/auth');\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: AUTH_ERROR\n      });\n    }\n  }; //Register User\n\n\n  const register = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/users', formData, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  }; //Login User\n\n\n  const login = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/auth', formData, config);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  }; //Logout\n\n\n  const logout = () => console.log('logout'); //Clear Errors\n\n\n  const clearErrors = () => dispatch({\n    type: CLEAR_ERRORS\n  });\n\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      register,\n      loadUser,\n      login,\n      logout,\n      clearErrors,\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      user: state.user,\n      error: state.error\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["C:\\Users\\Test\\Documents\\GitHub\\contacts\\client\\src\\context\\auth\\AuthState.js"],"names":["axios","React","useReducer","setAuthToken","REGISTER_FAIL","REGISTER_SUCCESS","CLEAR_ERRORS","USER_LOADED","AUTH_ERROR","AuthContext","authReducer","AuthState","props","initialState","token","localStorage","getItem","user","isAuthenticated","loading","error","state","dispatch","loadUser","res","get","type","payload","data","err","register","formData","config","headers","post","response","msg","login","LOGIN_SUCCESS","LOGIN_FAIL","logout","console","log","clearErrors","children"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport React, { useReducer } from 'react';\r\nimport setAuthToken from '../../utils/setAuthToken';\r\nimport {\r\n  REGISTER_FAIL,\r\n  REGISTER_SUCCESS,\r\n  CLEAR_ERRORS,\r\n  USER_LOADED,\r\n  AUTH_ERROR\r\n} from '../types';\r\nimport AuthContext from './authContext';\r\nimport authReducer from './authReducer';\r\n\r\nconst AuthState = props => {\r\n  const initialState = {\r\n    token: localStorage.getItem('token'),\r\n    user: null,\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    error: null\r\n  };\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  //Load User\r\n  const loadUser = async () => {\r\n    if (localStorage.token) {\r\n      setAuthToken(localStorage.token);\r\n    }\r\n    try {\r\n      const res = await axios.get('/api/auth');\r\n\r\n      dispatch({ type: USER_LOADED, payload: res.data });\r\n    } catch (err) {\r\n      dispatch({ type: AUTH_ERROR });\r\n    }\r\n  };\r\n  //Register User\r\n  const register = async formData => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n    try {\r\n      const res = await axios.post('/api/users', formData, config);\r\n      dispatch({\r\n        type: REGISTER_SUCCESS,\r\n        payload: res.data\r\n      });\r\n      loadUser();\r\n    } catch (err) {\r\n      dispatch({ type: REGISTER_FAIL, payload: err.response.data.msg });\r\n    }\r\n  };\r\n\r\n  //Login User\r\n  const login = async formData => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n    try {\r\n      const res = await axios.post('/api/auth', formData, config);\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: res.data\r\n      });\r\n      loadUser();\r\n    } catch (err) {\r\n      dispatch({ type: LOGIN_FAIL, payload: err.response.data.msg });\r\n    }\r\n  };\r\n  //Logout\r\n  const logout = () => console.log('logout');\r\n  //Clear Errors\r\n  const clearErrors = () => dispatch({ type: CLEAR_ERRORS });\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        register,\r\n        loadUser,\r\n        login,\r\n        logout,\r\n        clearErrors,\r\n        token: state.token,\r\n        isAuthenticated: state.isAuthenticated,\r\n        loading: state.loading,\r\n        user: state.user,\r\n        error: state.error\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthState;\r\n"]},"metadata":{},"sourceType":"module"}