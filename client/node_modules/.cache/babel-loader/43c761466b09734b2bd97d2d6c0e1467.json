{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Test\\\\Documents\\\\GitHub\\\\contacts\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Test\\\\Documents\\\\GitHub\\\\contacts\\\\client\\\\src\\\\context\\\\contact\\\\ContactState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport uuid from 'uuid';\nimport { ADD_CONTACT, CLEAR_CURRENT, DELETE_CONTACT, SET_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER } from '../types';\nimport ContactContext from './contactContext';\nimport ContactReducer from './contactReducer';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [],\n    current: null,\n    filtered: null\n  };\n\n  const _useReducer = useReducer(ContactReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; //Add Contact\n\n\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/contacts');\n    } catch (error) {}\n\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n    console.log(contact.id);\n  }; //Delete Contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; //Set Current Contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; //Clear Current Contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //Update Contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; //Filter Contacts\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; //ClearFilter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      addContact,\n      deleteContact,\n      setCurrent,\n      filterContacts,\n      clearFilter,\n      clearCurrent,\n      updateContact\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["C:\\Users\\Test\\Documents\\GitHub\\contacts\\client\\src\\context\\contact\\ContactState.js"],"names":["React","useReducer","axios","uuid","ADD_CONTACT","CLEAR_CURRENT","DELETE_CONTACT","SET_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","ContactContext","ContactReducer","ContactState","props","initialState","contacts","current","filtered","state","dispatch","addContact","contact","config","headers","res","post","error","type","payload","console","log","id","deleteContact","setCurrent","clearCurrent","updateContact","filterContacts","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport uuid from 'uuid';\r\nimport {\r\n  ADD_CONTACT,\r\n  CLEAR_CURRENT,\r\n  DELETE_CONTACT,\r\n  SET_CURRENT,\r\n  UPDATE_CONTACT,\r\n  FILTER_CONTACTS,\r\n  CLEAR_FILTER\r\n} from '../types';\r\nimport ContactContext from './contactContext';\r\nimport ContactReducer from './contactReducer';\r\n\r\nconst ContactState = props => {\r\n  const initialState = {\r\n    contacts: [\r\n     \r\n    ],\r\n    current: null,\r\n    filtered: null\r\n  };\r\n  const [state, dispatch] = useReducer(ContactReducer, initialState);\r\n\r\n  //Add Contact\r\n  const addContact = async contact => {\r\n    const config = {\r\n      headers: {\r\n       'Content-Type' : 'application/json'\r\n      }\r\n    }\r\n\r\n    try {\r\n      const res = await axios.post('/api/contacts')\r\n    } catch (error) {\r\n      \r\n    }\r\n    dispatch({ type: ADD_CONTACT, payload: contact });\r\n    console.log(contact.id);\r\n  };\r\n  //Delete Contact\r\n  const deleteContact = id => {\r\n    dispatch({ type: DELETE_CONTACT, payload: id });\r\n  };\r\n  //Set Current Contact\r\n  const setCurrent = contact => {\r\n    dispatch({ type: SET_CURRENT, payload: contact });\r\n  };\r\n  //Clear Current Contact\r\n  const clearCurrent = () => {\r\n    dispatch({ type: CLEAR_CURRENT });\r\n  };\r\n  //Update Contact\r\n  const updateContact = contact => {\r\n    dispatch({ type: UPDATE_CONTACT, payload: contact });\r\n  };\r\n  //Filter Contacts\r\n  const filterContacts = text => {\r\n    dispatch({ type: FILTER_CONTACTS, payload: text });\r\n  };\r\n  //ClearFilter\r\n  const clearFilter = () => {\r\n    dispatch({ type: CLEAR_FILTER });\r\n  };\r\n  return (\r\n    <ContactContext.Provider\r\n      value={{\r\n        contacts: state.contacts,\r\n        current: state.current,\r\n        filtered: state.filtered,\r\n        addContact,\r\n        deleteContact,\r\n        setCurrent,\r\n        filterContacts,\r\n        clearFilter,\r\n        clearCurrent,\r\n        updateContact\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ContactContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ContactState;\r\n"]},"metadata":{},"sourceType":"module"}