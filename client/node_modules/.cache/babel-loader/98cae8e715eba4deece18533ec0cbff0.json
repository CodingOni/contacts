{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Test\\\\Documents\\\\GitHub\\\\contacts\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Test\\\\Documents\\\\GitHub\\\\contacts\\\\client\\\\src\\\\context\\\\contact\\\\ContactState.js\";\nimport React, { useReducer } from 'react';\nimport uuid from 'uuid';\nimport { ADD_CONTACT, CLEAR_CURRENT, DELETE_CONTACT, SET_CURRENT, UPDATE_CONTACT } from '../types';\nimport ContactContext from './contactContext';\nimport ContactReducer from './contactReducer';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [{\n      name: 'Jill Johnson',\n      id: '1000',\n      email: 'jill@gmail.com',\n      phone: '111-111-1111',\n      type: 'Personal'\n    }, {\n      name: 'john Johnson',\n      id: '1100',\n      email: 'john@gmail.com',\n      phone: '111-111-1111',\n      type: 'Personal'\n    }, {\n      name: 'jake Johnson',\n      id: '1200',\n      email: 'jake@gmail.com',\n      phone: '111-111-1111',\n      type: 'Professional'\n    }],\n    current: null,\n    filtered: null\n  };\n\n  const _useReducer = useReducer(ContactReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; //Add Contact\n\n\n  const addContact = contact => {\n    contact.id = uuid.v4();\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n    console.log(contact.id);\n  }; //Delete Contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; //Set Current Contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; //Clear Current Contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //Update Contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; //Filter Contacts\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACT,\n      payload: text\n    });\n  }; //ClearFilter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  };\n\n  return React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["C:\\Users\\Test\\Documents\\GitHub\\contacts\\client\\src\\context\\contact\\ContactState.js"],"names":["React","useReducer","uuid","ADD_CONTACT","CLEAR_CURRENT","DELETE_CONTACT","SET_CURRENT","UPDATE_CONTACT","ContactContext","ContactReducer","ContactState","props","initialState","contacts","name","id","email","phone","type","current","filtered","state","dispatch","addContact","contact","v4","payload","console","log","deleteContact","setCurrent","clearCurrent","updateContact","filterContacts","text","FILTER_CONTACT","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\r\nimport uuid from 'uuid';\r\nimport {\r\n  ADD_CONTACT,\r\n  CLEAR_CURRENT,\r\n  DELETE_CONTACT,\r\n  SET_CURRENT,\r\n  UPDATE_CONTACT\r\n} from '../types';\r\nimport ContactContext from './contactContext';\r\nimport ContactReducer from './contactReducer';\r\n\r\nconst ContactState = props => {\r\n  const initialState = {\r\n    contacts: [\r\n      {\r\n        name: 'Jill Johnson',\r\n        id: '1000',\r\n        email: 'jill@gmail.com',\r\n        phone: '111-111-1111',\r\n        type: 'Personal'\r\n      },\r\n      {\r\n        name: 'john Johnson',\r\n        id: '1100',\r\n        email: 'john@gmail.com',\r\n        phone: '111-111-1111',\r\n        type: 'Personal'\r\n      },\r\n      {\r\n        name: 'jake Johnson',\r\n        id: '1200',\r\n        email: 'jake@gmail.com',\r\n        phone: '111-111-1111',\r\n        type: 'Professional'\r\n      }\r\n    ],\r\n    current: null,\r\n    filtered: null\r\n  };\r\n  const [state, dispatch] = useReducer(ContactReducer, initialState);\r\n\r\n  //Add Contact\r\n  const addContact = contact => {\r\n    contact.id = uuid.v4();\r\n    dispatch({ type: ADD_CONTACT, payload: contact });\r\n    console.log(contact.id);\r\n  };\r\n  //Delete Contact\r\n  const deleteContact = id => {\r\n    dispatch({ type: DELETE_CONTACT, payload: id });\r\n  };\r\n  //Set Current Contact\r\n  const setCurrent = contact => {\r\n    dispatch({ type: SET_CURRENT, payload: contact });\r\n  };\r\n  //Clear Current Contact\r\n  const clearCurrent = () => {\r\n    dispatch({ type: CLEAR_CURRENT });\r\n  };\r\n  //Update Contact\r\n  const updateContact = contact => {\r\n    dispatch({ type: UPDATE_CONTACT, payload: contact });\r\n  };\r\n  //Filter Contacts\r\n  const filterContacts = text => {\r\n    dispatch({ type: FILTER_CONTACT, payload: text });\r\n  };\r\n  //ClearFilter\r\n  const clearFilter = () => {\r\n    dispatch({ type: CLEAR_CURRENT });\r\n  };\r\n  return (\r\n    <ContactContext.Provider\r\n      value={{\r\n        contacts: state.contacts,\r\n        current: state.current,\r\n        addContact,\r\n        deleteContact,\r\n        setCurrent,\r\n        clearCurrent,\r\n        updateContact\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ContactContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ContactState;\r\n"]},"metadata":{},"sourceType":"module"}