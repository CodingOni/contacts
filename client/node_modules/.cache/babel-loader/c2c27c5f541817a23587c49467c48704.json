{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Test\\\\Documents\\\\GitHub\\\\contacts\\\\client\\\\src\\\\components\\\\contacts\\\\Contacts.js\";\nimport React, { Fragment, useContext, useEffect } from 'react';\nimport ContactContext from '../../context/contact/contactContext';\nimport ContactItem from './ContactItem';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport Spinner from '../layout/Spinner';\n\nconst Contacts = () => {\n  const contactContext = useContext(ContactContext);\n  const contacts = contactContext.contacts,\n        filtered = contactContext.filtered,\n        getContacts = contactContext.getContacts,\n        loading = contactContext.loading;\n  useEffect(() => {\n    getContacts(); //eslint-disable-next-line\n  }, []);\n\n  if (contacts !== null) {\n    return React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Please add a contact\");\n  }\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, contacts !== null && !loading ? React.createElement(TransitionGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, filtered !== null ? filtered.map(contact => React.createElement(CSSTransition, {\n    key: contact._id,\n    timeout: 500,\n    classNames: \"item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(ContactItem, {\n    contact: contact,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }))) : contacts.map(contact => React.createElement(CSSTransition, {\n    key: contact._id,\n    timeout: 500,\n    classNames: \"item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(ContactItem, {\n    contact: contact,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })))) : React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }));\n};\n\nexport default Contacts;","map":{"version":3,"sources":["C:\\Users\\Test\\Documents\\GitHub\\contacts\\client\\src\\components\\contacts\\Contacts.js"],"names":["React","Fragment","useContext","useEffect","ContactContext","ContactItem","CSSTransition","TransitionGroup","Spinner","Contacts","contactContext","contacts","filtered","getContacts","loading","map","contact","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAMC,cAAc,GAAGR,UAAU,CAACE,cAAD,CAAjC;AADqB,QAGbO,QAHa,GAGgCD,cAHhC,CAGbC,QAHa;AAAA,QAGHC,QAHG,GAGgCF,cAHhC,CAGHE,QAHG;AAAA,QAGOC,WAHP,GAGgCH,cAHhC,CAGOG,WAHP;AAAA,QAGoBC,OAHpB,GAGgCJ,cAHhC,CAGoBI,OAHpB;AAKrBX,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,WAAW,GADG,CAGd;AACD,GAJQ,EAIP,EAJO,CAAT;;AAMA,MAAIF,QAAQ,KAAK,IAAjB,EAAwB;AACtB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAP;AACD;;AAED,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,QAAQ,KAAK,IAAb,IAAqB,CAACG,OAAtB,GAAiC,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAC/BF,QAAQ,KAAK,IAAb,GACGA,QAAQ,CAACG,GAAT,CAAaC,OAAO,IAClB,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAEA,OAAO,CAACC,GAA5B;AAAiC,IAAA,OAAO,EAAE,GAA1C;AAA+C,IAAA,UAAU,EAAC,MAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAED,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADH,GAMGL,QAAQ,CAACI,GAAT,CAAaC,OAAO,IACpB,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAEA,OAAO,CAACC,GAA5B;AAAiC,IAAA,OAAO,EAAE,GAA1C;AAA+C,IAAA,UAAU,EAAC,MAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAED,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADA,CAP4B,CAAjC,GAYoB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbvB,CADF;AAkBD,CAjCD;;AAmCA,eAAeP,QAAf","sourcesContent":["import React, { Fragment, useContext,useEffect } from 'react';\r\nimport ContactContext from '../../context/contact/contactContext';\r\nimport ContactItem from './ContactItem';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nconst Contacts = () => {\r\n  const contactContext = useContext(ContactContext);\r\n\r\n  const { contacts, filtered, getContacts, loading } = contactContext;\r\n  \r\n  useEffect(() => {\r\n    getContacts()\r\n    \r\n    //eslint-disable-next-line\r\n  },[]);\r\n\r\n  if (contacts !== null ) {\r\n    return <h4>Please add a contact</h4>;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {contacts !== null && !loading ? (<TransitionGroup>\r\n        {filtered !== null\r\n          ? filtered.map(contact => (\r\n              <CSSTransition key={contact._id} timeout={500} classNames=\"item\">\r\n                <ContactItem contact={contact} />\r\n              </CSSTransition>\r\n            ))\r\n          : contacts.map(contact => (\r\n            <CSSTransition key={contact._id} timeout={500} classNames=\"item\">\r\n              <ContactItem contact={contact} />\r\n              </CSSTransition>\r\n            ))}\r\n      </TransitionGroup>) :<Spinner/>}\r\n      \r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n"]},"metadata":{},"sourceType":"module"}