{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Test\\\\Documents\\\\GitHub\\\\contacts\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Test\\\\Documents\\\\GitHub\\\\contacts\\\\client\\\\src\\\\context\\\\alert\\\\AlertState.js\";\nimport React, { useReducer } from 'react';\nimport AlertContext from './alertContext';\nimport alertReducer from './alertReducer';\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\nimport uuid from 'uuid';\n\nconst AlertState = props => {\n  const initialState = [];\n\n  const _useReducer = useReducer(alertReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; //Set Alert\n\n\n  const setAlert = (msg, type, timeout = 5000) => {\n    const id = uuid.v4();\n    dispatch({\n      type: SET_ALERT,\n      payload: {\n        msg,\n        type,\n        id\n      }\n    });\n    setTimeout(() => dispatch({\n      type: REMOVE_ALERT,\n      payload: id\n    }), timeout);\n  };\n\n  return React.createElement(AlertContext.Provider, {\n    value: {\n      alerts: state,\n      setAlert\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default AlertState;","map":{"version":3,"sources":["C:\\Users\\Test\\Documents\\GitHub\\contacts\\client\\src\\context\\alert\\AlertState.js"],"names":["React","useReducer","AlertContext","alertReducer","SET_ALERT","REMOVE_ALERT","uuid","AlertState","props","initialState","state","dispatch","setAlert","msg","type","timeout","id","v4","payload","setTimeout","alerts","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,UAAxC;AACA,OAAOC,IAAP,MAAiB,MAAjB;;AACA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AACxB,QAAMC,YAAY,GAAG,EAArB;;AADwB,sBAEER,UAAU,CAACE,YAAD,EAAeM,YAAf,CAFZ;AAAA;AAAA,QAEjBC,KAFiB;AAAA,QAEVC,QAFU,oBAIxB;;;AACA,QAAMC,QAAQ,GAAG,CAACC,GAAD,EAAMC,IAAN,EAAYC,OAAO,GAAG,IAAtB,KAA+B;AAC5C,UAAMC,EAAE,GAAGV,IAAI,CAACW,EAAL,EAAX;AACAN,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEV,SADD;AAELc,MAAAA,OAAO,EAAE;AAAEL,QAAAA,GAAF;AAAOC,QAAAA,IAAP;AAAaE,QAAAA;AAAb;AAFJ,KAAD,CAAR;AAIAG,IAAAA,UAAU,CAAC,MAAMR,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAET,YAAR;AAAsBa,MAAAA,OAAO,EAAEF;AAA/B,KAAD,CAAf,EAERD,OAFQ,CAAV;AAGH,GATD;;AAWF,SACE,oBAAC,YAAD,CAAc,QAAd;AACE,IAAA,KAAK,EAAE;AACLK,MAAAA,MAAM,EAAEV,KADH;AAELE,MAAAA;AAFK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGJ,KAAK,CAACa,QANT,CADF;AAUD,CA1BD;;AA4BA,eAAed,UAAf","sourcesContent":["import React, { useReducer } from 'react';\r\nimport AlertContext from './alertContext';\r\nimport alertReducer from './alertReducer';\r\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\r\nimport uuid from 'uuid'\r\nconst AlertState = props => {\r\n    const initialState = []\r\n    const [state, dispatch] = useReducer(alertReducer, initialState);\r\n\r\n    //Set Alert\r\n    const setAlert = (msg, type, timeout = 5000) => {\r\n        const id = uuid.v4();\r\n        dispatch({\r\n            type: SET_ALERT,\r\n            payload: { msg, type, id }\r\n        });\r\n        setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id })\r\n            \r\n        , timeout);\r\n    };\r\n\r\n  return (\r\n    <AlertContext.Provider\r\n      value={{\r\n        alerts: state,\r\n        setAlert\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AlertContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AlertState;\r\n"]},"metadata":{},"sourceType":"module"}