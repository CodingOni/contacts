{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Test\\\\Documents\\\\GitHub\\\\contacts\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\Test\\\\Documents\\\\GitHub\\\\contacts\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Test\\\\Documents\\\\GitHub\\\\contacts\\\\client\\\\src\\\\components\\\\auth\\\\Login.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport AlertContext from '../../context/alert/alertContext';\nimport AuthContext from '../../context/auth/authContext';\n\nconst Login = props => {\n  const alertContext = useContext(AlertContext);\n  const authContext = useContext(AuthContext);\n  const setAlert = alertContext.setAlert;\n  const login = authContext.login,\n        error = authContext.error,\n        clearErrors = authContext.clearErrors,\n        isAuthenticated = authContext.isAuthenticated;\n  useEffect(() => {\n    if (isAuthenticated) {// props.history.push('/');\n    }\n\n    if (error === 'Invalid Credentials') {\n      setAlert(error, 'danger');\n      clearErrors();\n    } // eslint-disable-next-line\n\n  }, [error, isAuthenticated, props.history]);\n\n  const _useState = useState({\n    email: '',\n    password: '',\n    password2: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  const name = user.name,\n        email = user.email,\n        password = user.password,\n        password2 = user.password2;\n\n  const onChange = e => setUser(_objectSpread({}, user, {\n    [e.target.name]: e.target.value\n  }));\n\n  const onSubmit = e => {\n    e.prevent;\n    login({\n      email,\n      password\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Account \", React.createElement(\"span\", {\n    className: \"text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Login\"), React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Email Address\"), React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: onChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: onChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Login\",\n    className: \"btn btn-primary btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }))));\n};\n\nexport default Login;","map":{"version":3,"sources":["C:\\Users\\Test\\Documents\\GitHub\\contacts\\client\\src\\components\\auth\\Login.js"],"names":["React","useContext","useEffect","useState","AlertContext","AuthContext","Login","props","alertContext","authContext","setAlert","login","error","clearErrors","isAuthenticated","history","email","password","password2","user","setUser","name","onChange","e","target","value","onSubmit","prevent"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport AlertContext from '../../context/alert/alertContext';\r\nimport AuthContext from '../../context/auth/authContext';\r\n\r\nconst Login = props => {\r\n  const alertContext = useContext(AlertContext);\r\n  const authContext = useContext(AuthContext);\r\n\r\n  const { setAlert } = alertContext;\r\n\r\n  const { login, error, clearErrors, isAuthenticated } = authContext;\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      // props.history.push('/');\r\n    }\r\n    if (error === 'Invalid Credentials') {\r\n      setAlert(error, 'danger');\r\n      clearErrors();\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [error, isAuthenticated, props.history]);\r\n\r\n  const [user, setUser] = useState({\r\n    email: '',\r\n    password: '',\r\n    password2: ''\r\n  });\r\n\r\n  const { name, email, password, password2 } = user;\r\n\r\n  const onChange = e => setUser({ ...user, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = e => {\r\n    e.prevent\r\n      login({ email, password });\r\n    \r\n    \r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>\r\n        Account <span className=\"text-primary\">Login</span>\r\n        <form onSubmit={onSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Email Address</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={onChange}\r\n              required\r\n              \r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={onChange}\r\n              required\r\n              \r\n            />\r\n          </div>\r\n\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Login\"\r\n            className=\"btn btn-primary btn-block\"\r\n          />\r\n        </form>\r\n      </h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}