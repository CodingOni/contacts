{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Test\\\\Documents\\\\GitHub\\\\contacts\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { FILTER_CONTACTS, ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, CLEAR_FILTER, CONTACT_ERROR, GET_CONTACTS, CLEAR_CONTACTS } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case ADD_CONTACT:\n      return _objectSpread({}, state, {\n        loading: false,\n        contacts: [action.payload, ...state.contacts]\n      });\n\n    case GET_CONTACTS:\n      return _objectSpread({}, state, {\n        contacts: action.payload,\n        loading: false\n      });\n\n    case UPDATE_CONTACT:\n      return _objectSpread({}, state, {\n        loading: false,\n        contacts: state.contacts.map(contact => contact._id === action.payload.id ? action.payload : contact)\n      });\n\n    case DELETE_CONTACT:\n      return _objectSpread({}, state, {\n        loading: false,\n        contacts: state.contacts.filter(contact => contact._id !== action.payload)\n      });\n\n    case CLEAR_CONTACTS:\n      return _objectSpread({}, state, {\n        contacts: null,\n        filtered: null,\n        error: null,\n        current: null\n      });\n\n    case SET_CURRENT:\n      return _objectSpread({}, state, {\n        loading: false,\n        current: action.payload\n      });\n\n    case CLEAR_CURRENT:\n      return _objectSpread({}, state, {\n        loading: false,\n        current: null\n      });\n\n    case FILTER_CONTACTS:\n      return _objectSpread({}, state, {\n        loading: false,\n        filtered: state.contacts.filter(contact => {\n          const regex = new RegExp(\"\".concat(action.payload), 'gi');\n          return contact.name.match(regex) || contact.email.match(regex);\n        })\n      });\n\n    case CLEAR_FILTER:\n      return _objectSpread({}, state, {\n        loading: false,\n        filtered: null\n      });\n\n    case CONTACT_ERROR:\n      return _objectSpread({}, state, {\n        loading: false,\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:\\Users\\Test\\Documents\\GitHub\\contacts\\client\\src\\context\\contact\\contactReducer.js"],"names":["FILTER_CONTACTS","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","CLEAR_FILTER","CONTACT_ERROR","GET_CONTACTS","CLEAR_CONTACTS","state","action","type","loading","contacts","payload","map","contact","_id","id","filter","filtered","error","current","regex","RegExp","name","match","email"],"mappings":";AAAA,SACEA,eADF,EAEEC,WAFF,EAGEC,cAHF,EAIEC,WAJF,EAKEC,aALF,EAMEC,cANF,EAOEC,YAPF,EAQEC,aARF,EASEC,YATF,EAUEC,cAVF,QAWO,UAXP;AAaA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,WAAL;AACE,+BACKS,KADL;AAEEG,QAAAA,OAAO,EAAC,KAFV;AAGEC,QAAAA,QAAQ,EAAE,CAAGH,MAAM,CAACI,OAAV,EAAmB,GAAGL,KAAK,CAACI,QAA5B;AAHZ;;AAKF,SAAKN,YAAL;AACE,+BACKE,KADL;AAEEI,QAAAA,QAAQ,EAAEH,MAAM,CAACI,OAFnB;AAGEF,QAAAA,OAAO,EAAC;AAHV;;AAKF,SAAKR,cAAL;AACE,+BACKK,KADL;AAEEG,QAAAA,OAAO,EAAC,KAFV;AAGEC,QAAAA,QAAQ,EAAEJ,KAAK,CAACI,QAAN,CAAeE,GAAf,CAAmBC,OAAO,IAClCA,OAAO,CAACC,GAAR,KAAgBP,MAAM,CAACI,OAAP,CAAeI,EAA/B,GAAoCR,MAAM,CAACI,OAA3C,GAAqDE,OAD7C;AAHZ;;AAOF,SAAKf,cAAL;AACE,+BACKQ,KADL;AAEEG,QAAAA,OAAO,EAAC,KAFV;AAGEC,QAAAA,QAAQ,EAAEJ,KAAK,CAACI,QAAN,CAAeM,MAAf,CACRH,OAAO,IAAIA,OAAO,CAACC,GAAR,KAAgBP,MAAM,CAACI,OAD1B;AAHZ;;AAOF,SAAKN,cAAL;AACE,+BACKC,KADL;AAEEI,QAAAA,QAAQ,EAAE,IAFZ;AAGEO,QAAAA,QAAQ,EAAE,IAHZ;AAIEC,QAAAA,KAAK,EAAE,IAJT;AAKEC,QAAAA,OAAO,EAAE;AALX;;AAOF,SAAKpB,WAAL;AACE,+BACKO,KADL;AAEEG,QAAAA,OAAO,EAAC,KAFV;AAGEU,QAAAA,OAAO,EAAEZ,MAAM,CAACI;AAHlB;;AAKF,SAAKX,aAAL;AACE,+BACKM,KADL;AAEEG,QAAAA,OAAO,EAAC,KAFV;AAGEU,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKvB,eAAL;AACE,+BACKU,KADL;AAEEG,QAAAA,OAAO,EAAC,KAFV;AAGEQ,QAAAA,QAAQ,EAAEX,KAAK,CAACI,QAAN,CAAeM,MAAf,CAAsBH,OAAO,IAAI;AACzC,gBAAMO,KAAK,GAAG,IAAIC,MAAJ,WAAcd,MAAM,CAACI,OAArB,GAAgC,IAAhC,CAAd;AACA,iBAAOE,OAAO,CAACS,IAAR,CAAaC,KAAb,CAAmBH,KAAnB,KAA6BP,OAAO,CAACW,KAAR,CAAcD,KAAd,CAAoBH,KAApB,CAApC;AACD,SAHS;AAHZ;;AAQF,SAAKlB,YAAL;AACE,+BACKI,KADL;AAEEG,QAAAA,OAAO,EAAC,KAFV;AAGEQ,QAAAA,QAAQ,EAAE;AAHZ;;AAKF,SAAKd,aAAL;AACE,+BACKG,KADL;AAEEG,QAAAA,OAAO,EAAC,KAFV;AAGES,QAAAA,KAAK,EAAEX,MAAM,CAACI;AAHhB;;AAKF;AACE,aAAOL,KAAP;AAvEJ;AAyED,CA1ED","sourcesContent":["import {\r\n  FILTER_CONTACTS,\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_CONTACT,\r\n  CLEAR_FILTER,\r\n  CONTACT_ERROR,\r\n  GET_CONTACTS,\r\n  CLEAR_CONTACTS\r\n} from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case ADD_CONTACT:\r\n      return {\r\n        ...state,\r\n        loading:false,\r\n        contacts: [  action.payload, ...state.contacts]\r\n      };\r\n    case GET_CONTACTS:\r\n      return {\r\n        ...state,\r\n        contacts: action.payload,\r\n        loading:false\r\n      }\r\n    case UPDATE_CONTACT:\r\n      return {\r\n        ...state,\r\n        loading:false,\r\n        contacts: state.contacts.map(contact =>\r\n          contact._id === action.payload.id ? action.payload : contact\r\n        )\r\n      };\r\n    case DELETE_CONTACT:\r\n      return {\r\n        ...state,\r\n        loading:false,\r\n        contacts: state.contacts.filter(\r\n          contact => contact._id !== action.payload\r\n        )\r\n      };\r\n    case CLEAR_CONTACTS:\r\n      return {\r\n        ...state,\r\n        contacts: null,\r\n        filtered: null,\r\n        error: null,\r\n        current: null,\r\n      };\r\n    case SET_CURRENT:\r\n      return {\r\n        ...state,\r\n        loading:false,\r\n        current: action.payload\r\n      };\r\n    case CLEAR_CURRENT:\r\n      return {\r\n        ...state,\r\n        loading:false,\r\n        current: null\r\n      };\r\n    case FILTER_CONTACTS:\r\n      return {\r\n        ...state,\r\n        loading:false,\r\n        filtered: state.contacts.filter(contact => {\r\n          const regex = new RegExp(`${action.payload}`, 'gi');\r\n          return contact.name.match(regex) || contact.email.match(regex);\r\n        })\r\n      };\r\n    case CLEAR_FILTER:\r\n      return {\r\n        ...state,\r\n        loading:false,\r\n        filtered: null\r\n      };\r\n    case CONTACT_ERROR:\r\n      return {\r\n        ...state,\r\n        loading:false,\r\n        error: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}